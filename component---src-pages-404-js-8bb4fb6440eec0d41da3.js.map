{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./config.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Sidebar.js","webpack:///./src/components/Layout.js"],"names":["IndexPage","fullMenu","id","m","module","exports","require","default","siteTitle","manifestName","manifestShortName","manifestStartUrl","manifestBackgroundColor","manifestThemeColor","manifestDisplay","heading","subHeading","socialLinks","style","icon","name","url","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","json","StaticQueryContext","loader","enqueue","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","StaticQuery","props","children","Consumer","Footer","className","config","map","social","key","href","Date","getFullYear","SideBar","useState","headerOpen","to","Layout","state","isPreloaded","componentDidMount","this","timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","title","site","siteMetadata","meta","content","lang","Component"],"mappings":"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","file":"component---src-pages-404-js-8bb4fb6440eec0d41da3.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst IndexPage = () => (\n  <Layout fullMenu>\n    <article id=\"main\">\n      <header>\n        <h2>Oops</h2>\n        <p>I see you sneaking around...</p>\n      </header>\n    </article>\n  </Layout>\n);\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  siteTitle: 'Andrew Sellenrick - Designer & Developer', // <title>\n  manifestName: 'Andrew Sellenrick',\n  manifestShortName: 'Landing', // max 12 characters\n  manifestStartUrl: '/',\n  manifestBackgroundColor: '#663399',\n  manifestThemeColor: '#663399',\n  manifestDisplay: 'standalone',\n  heading: 'Andrew Sellenrick',\n  subHeading: 'Organized Designer & Creative Developer',\n  // social\n  socialLinks: [\n    {\n      style: 'brands',\n      icon: 'fa-github',\n      name: 'Github',\n      url: 'https://github.com/asellenrick',\n    },\n    {\n      style: 'brands',\n      icon: 'fa-twitter',\n      name: 'Twitter',\n      url: 'https://twitter.com/sellenrick',\n    },\n    {\n      style: 'solid',\n      icon: 'fa-envelope',\n      name: 'Email',\n      url: 'mailto:sellenrick@gmail.com',\n    },\n  ],\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\nimport config from '../../config';\nexport default function Footer() {\n  return (\n    <footer id=\"footer\">\n      <ul className=\"icons\">\n        {config.socialLinks.map(social => {\n          const { style, icon, name, url } = social;\n          return (\n            <li key={url}>\n              <a href={url} className={`icon ${style} ${icon}`}>\n                <span className=\"label\">{name}</span>\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n      <ul className=\"copyright\">\n        <li>\n          Copyright &copy; {new Date().getFullYear()} Andrew Sellenrick. All\n          rights reserved\n        </li>\n      </ul>\n    </footer>\n  );\n}\n","import React, { useState } from 'react';\nimport Nav from './Nav';\nimport { Link } from 'gatsby';\nexport default function SideBar({ fullMenu }) {\n  const [headerOpen, toggleHeader] = useState(false);\n  return (\n    <header id=\"header\" className={`${fullMenu ? '' : 'alt'}`}>\n      <h1>\n        <Link to=\"/\">Sellenrick</Link>\n      </h1>\n      <div className={`${headerOpen ? 'is-menu-visible' : ' '}`}>\n        {false ? <Nav onMenuToggle={() => toggleHeader(!headerOpen)} /> : null}\n      </div>\n    </header>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport '../assets/sass/main.scss';\nimport Footer from './Footer';\nimport SideBar from './Sidebar';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreloaded: true,\n    };\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isPreloaded: false });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    const { children, fullMenu } = this.props;\n    const { isPreloaded } = this.state;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                {\n                  name: 'description',\n                  content: 'Andrew Sellenrick Designer and Developer',\n                },\n                {\n                  name: 'keywords',\n                  content:\n                    'designer, developer, interface design, coder, portfolio',\n                },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <div\n              className={\n                isPreloaded\n                  ? 'landing main-body is-preload'\n                  : 'landing main-body'\n              }\n            >\n              <div id=\"page-wrapper\">\n                <SideBar fullMenu={fullMenu} />\n                {children}\n                <Footer />\n              </div>\n            </div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}