{"version":3,"sources":["webpack:///./src/pages/Work/All.js","webpack:///./.cache/public-page-renderer.js","webpack:///./config.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Sidebar.js","webpack:///./src/components/Layout.js"],"names":["AllWork","fullMenu","id","className","m","module","exports","require","default","siteTitle","manifestName","manifestShortName","manifestStartUrl","manifestBackgroundColor","manifestThemeColor","manifestDisplay","manifestIcon","pathPrefix","heading","subHeading","socialLinks","style","icon","name","url","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","json","StaticQueryContext","loader","enqueue","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","StaticQuery","props","children","Consumer","Footer","config","map","social","key","href","Date","getFullYear","SideBar","useState","headerOpen","to","Layout","state","isPreloaded","componentDidMount","this","timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","title","site","siteMetadata","meta","content","lang","Component"],"mappings":"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","file":"component---src-pages-work-all-js-c9280686cb959d9c8247.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../../components/Layout';\n\nconst AllWork = () => (\n  <Layout fullMenu>\n    <article id=\"main\">\n      <header>\n        <h2>Blog Post Title</h2>\n        <p>2/22/19</p>\n      </header>\n      <section className=\"wrapper style5\">\n        <div className=\"inner\">\n          <h3>Getting Started</h3>\n          <p>Content</p>\n\n          <pre>\n            <code>\n              while (!deck.isInOrder()){' '}\n              {`{\n  print 'Iteration ' + i;\n  deck.shuffle();\n  i++;\n  }`}\n            </code>\n          </pre>\n\n          <p>\n            Vestibulum ultrices risus velit, sit amet blandit massa auctor sit\n            amet. Sed eu lectus sem. Phasellus in odio at ipsum porttitor mollis\n            id vel diam. Praesent sit amet posuere risus, eu faucibus lectus.\n            Vivamus ex ligula, tempus pulvinar ipsum in, auctor porta quam.\n            Proin nec dui cursus, posuere dui eget interdum. Fusce lectus magna,\n            sagittis at facilisis vitae, pellentesque at etiam. Quisque posuere\n            leo quis sem commodo, vel scelerisque nisi scelerisque. Suspendisse\n            id quam vel tortor tincidunt suscipit. Nullam auctor orci eu dolor\n            consectetur, interdum ullamcorper ante tincidunt. Mauris felis nec\n            felis elementum varius.\n          </p>\n\n          <hr />\n\n          <h4>Feugiat aliquam</h4>\n          <p>\n            Nam sapien ante, varius in pulvinar vitae, rhoncus id massa. Donec\n            varius ex in mauris ornare, eget euismod urna egestas. Etiam lacinia\n            tempor ipsum, sodales porttitor justo. Aliquam dolor quam, semper in\n            tortor eu, volutpat efficitur quam. Fusce nec fermentum nisl. Aenean\n            erat diam, tempus aliquet erat.\n          </p>\n\n          <p>\n            Etiam iaculis nulla ipsum, et pharetra libero rhoncus ut. Phasellus\n            rutrum cursus velit, eget condimentum nunc blandit vel. In at\n            pulvinar lectus. Morbi diam ante, vulputate et imperdiet eget,\n            fermentum non dolor. Ut eleifend sagittis tincidunt. Sed viverra\n            commodo mi, ac rhoncus justo. Duis neque ligula, elementum ut enim\n            vel, posuere finibus justo. Vivamus facilisis maximus nibh quis\n            pulvinar. Quisque hendrerit in ipsum id tellus facilisis fermentum.\n            Proin mauris dui, at vestibulum sit amet, auctor bibendum neque.\n          </p>\n        </div>\n      </section>\n    </article>\n  </Layout>\n);\n\nexport default AllWork;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  siteTitle: 'Andrew Sellenrick - Designer & Developer', // <title>\n  manifestName: 'Andrew Sellenrick',\n  manifestShortName: 'Landing', // max 12 characters\n  manifestStartUrl: '/',\n  manifestBackgroundColor: '#663399',\n  manifestThemeColor: '#663399',\n  manifestDisplay: 'standalone',\n  manifestIcon: 'src/assets/img/website-icon.png',\n  pathPrefix: `/gatsby-starter-spectral/`, // This path is subpath of your hosting https://domain/portfolio\n  heading: 'Andrew Sellenrick',\n  subHeading: 'Organized Designer & Creative Developer',\n  // social\n  socialLinks: [\n    {\n      style: 'brands',\n      icon: 'fa-github',\n      name: 'Github',\n      url: 'https://github.com/asellenrick',\n    },\n    {\n      style: 'brands',\n      icon: 'fa-twitter',\n      name: 'Twitter',\n      url: 'https://twitter.com/sellenrick',\n    },\n    {\n      style: 'solid',\n      icon: 'fa-envelope',\n      name: 'Email',\n      url: 'mailto:sellenrick@gmail.com',\n    },\n  ],\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\nimport config from '../../config';\nexport default function Footer() {\n  return (\n    <footer id=\"footer\">\n      <ul className=\"icons\">\n        {config.socialLinks.map(social => {\n          const { style, icon, name, url } = social;\n          return (\n            <li key={url}>\n              <a href={url} className={`icon ${style} ${icon}`}>\n                <span className=\"label\">{name}</span>\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n      <ul className=\"copyright\">\n        <li>\n          Copyright &copy; {new Date().getFullYear()} Andrew Sellenrick. All\n          rights reserved\n        </li>\n      </ul>\n    </footer>\n  );\n}\n","import React, { useState } from 'react';\nimport Nav from './Nav';\nimport { Link } from 'gatsby';\nexport default function SideBar({ fullMenu }) {\n  const [headerOpen, toggleHeader] = useState(false);\n  return (\n    <header id=\"header\" className={`${fullMenu ? '' : 'alt'}`}>\n      <h1>\n        <Link to=\"/\">Spectral</Link>\n      </h1>\n      <div className={`${headerOpen ? 'is-menu-visible' : ' '}`}>\n        {false ? <Nav onMenuToggle={() => toggleHeader(!headerOpen)} /> : null}\n      </div>\n    </header>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport '../assets/sass/main.scss';\nimport Footer from './Footer';\nimport SideBar from './Sidebar';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreloaded: true,\n    };\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isPreloaded: false });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    const { children, fullMenu } = this.props;\n    const { isPreloaded } = this.state;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                {\n                  name: 'description',\n                  content: 'Andrew Sellenrick Designer and Developer',\n                },\n                {\n                  name: 'keywords',\n                  content:\n                    'designer, developer, interface design, coder, portfolio',\n                },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <div\n              className={\n                isPreloaded\n                  ? 'landing main-body is-preload'\n                  : 'landing main-body'\n              }\n            >\n              <div id=\"page-wrapper\">\n                <SideBar fullMenu={fullMenu} />\n                {children}\n                <Footer />\n              </div>\n            </div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}